<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>hero never die</title>
  
  <subtitle>码农界的一股清流</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://topseczbw.github.io/"/>
  <updated>2019-04-05T06:16:52.380Z</updated>
  <id>https://topseczbw.github.io/</id>
  
  <author>
    <name>无畏</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Rollup快速入门</title>
    <link href="https://topseczbw.github.io/2019/04/05/rollup%E4%BB%8E0%E5%88%B01/"/>
    <id>https://topseczbw.github.io/2019/04/05/rollup从0到1/</id>
    <published>2019-04-05T04:44:30.060Z</published>
    <updated>2019-04-05T06:16:52.380Z</updated>
    
    <content type="html"><![CDATA[<p>解读官网，通俗易懂地学习Rollup<br><a id="more"></a><br><!-- toc --></p><h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><ul><li><h5 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h5><p>Rollup 是一个 JavaScript 模块打包器，可以将小块代码编译成大块复杂的代码，例如 library 或应用程序。</p><div class="alert info no-icon"><p>告别生撸前端代码，使用es6新语法，模块化等技术优雅写前端代码。</p></div><p>Rollup 对代码模块使用新的标准化格式，这些标准都包含在 JavaScript 的 ES6 版本中，而不是以前的特殊解决方案，如 CommonJS 和 AMD。</p><div class="alert info no-icon"><p>在使用rollup构建时，代码中引入模块只遵守ES模块规范。</p></div></li><li><h5 id="与webpack对比"><a href="#与webpack对比" class="headerlink" title="与webpack对比"></a>与webpack对比</h5><p>webpack：</p><ul><li>适合构建应用</li><li>支持代码拆分，支持代码异步加载、按需加载，支持热加载、开发环境本地服务调试</li></ul><p>rollup：</p><ul><li>适合构建lib库</li><li>打包出来的bundle比较干净，执行快，没有冗余代码</li><li>不支持代码拆分（最新的版本引入插件已经支持）、热加载、开发环境本地服务调试、不支持代码异步加载、按需加载</li><li>所有资源放在同一个地方，一次性加载</li></ul><div class="alert info no-icon"><ol><li>两者都支持Tree-shaking，但这个概念最初是由rollup引入的。</li><li>rollup并不支持代码拆分、热加载、开发环境本地服务调试</li><li>对于类库开发，只有 js，而没有其他的静态资源文件，webpack有些大材小用，使用rollup更合适</li><li>两者都支持导出时都支持各种模块规范</li><li>如果你的项目中引入了许多CommonJs规范的模块，也推荐使用webpack</li></ol></div></li></ul><h4 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h4><ul><li><p>什么是 ‘tree-shaking’?</p><div class="alert info no-icon"><ol><li>打包过程中自动删除代码中为引用的冗余代码</li><li>删除部分逻辑简单的计算代码，如：<code>var a = 1; var b =2; var c = a + b;</code>  打包结果：<code>var c = 3</code></li></ol></div></li><li><p>如果执行命令行参数和配置文件存在相同参数配置，优先选择哪一方？</p><div class="alert info no-icon"><p>优先选择命令行</p></div></li><li><p>自己写lib库时，可以引入的模块类型都有哪些，如何引入？</p><div class="alert info no-icon"><p>首先说一下整体流程：rollup将所有的模块代码引入方式改成import，然后在使用babel编译出兼容代码</p><p>所有模块类型都可以引入，包括：</p><ol><li>自己写的ES模块：直接引入</li><li>node_modules中的第三方模块：见下个问题</li></ol></div></li><li><p>源代码中如何引入node_modules中的模块？</p><div class="alert info no-icon"><p>不管是以require方式还是import方式导入，打包出来的bundle中都还是<strong>原本的require/import语句</strong>，并且打包结果并未引入到node_modules中的第三方资源。</p><p>此时我们需要先想办法将node_Module中的资源先提取出来，放到最后的打包的bundle中。（先不考虑在如何浏览器中运行）</p><p>rollup并不知道如何打破常规去处理node_modules中的依赖，需要使用  <code>rollup-plugin-node-resolve</code>  插件，告诉rollup如何去查找外部模块(node_modules中的模块)  找到之后，再去解析。</p></div><div class="alert warning no-icon"><p>至此，我们仅仅将允许以ES模块（如：the-answer 模块）类型引入的第三方依赖资源打包到bundle中。</p><p>但是目前，npm中的大多数包都是以CommonJS模块的形式出现的。 在它们更改之前，我们需要将CommonJS模块转换为 ES2015 供 Rollup 处理。</p><p>比如我们此时自己打包出一个只遵守Commonjs规范的包mock-lib。</p><p>在源代码中使用import语法引入 ，然后打包，会报错。</p><p>因为此时这个第三方包只能通过require方式引入。</p><p>即使改成require方式引入 ，打包完成，也只能在node中运行 。 </p><p>如果我们自己打包出一个只遵守umd规范的包 mock-lib，结果同上。</p><p>那我们到底如果引入外部的只支持CommonJs规范的模块呢？</p></div><div class="alert info no-icon"><p>需要一个插件  <code>rollup-plugin-commonjs</code>  ，帮我们解析，我们源代码中引入的，只遵循commonjs规范的第三方包，此时源代码中，我们只需使用import语法引入即可。</p><p>注意：我们源代码中，只支持ES模块规范，导入只用import</p></div></li><li><p>为什么ES模块比CommonJS更好?</p><div class="alert info no-icon"><p>ES模块是一个官方标准，也是JavaScript代码结构的明确前进之路，而CommonJS模块是一种特殊的临时解决方案，作为ES模块被提出之前作为权宜之计。ES模块允许静态分析，这有助于tree-shaking等优化，并提供循环引用和实时绑定等高级功能。</p></div></li><li><p>UMD规范内部实现？</p><div class="alert info no-icon"><p>先判断运行环境是否支持cjs，然后判断是否支持amd，如果都不支持，则使用iife规范，生成一个全局变量</p></div></li></ul><h4 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h4><ul><li><h5 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a>快速上手</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install rollup -g</span><br></pre></td></tr></table></figure><p>默认假设应用程序入口起点的名称为 main.js，并且你想要所有 import 的依赖(all imports)都编译到一个名为 bundle.js 的单个文件中。</p><p>浏览器：  <code>rollup main.js --file bundle.js --format iife</code>  </p><p>Node：    <code>rollup main.js --file bundle.js --format cjs</code></p><p>通用：      <code>rollup main.js --file bundle.js --format umd --name &quot;myBundle&quot;</code></p><div class="alert info no-icon"><ol><li>一句话总结：以<strong>谁</strong>为入口文件，以哪种模块规范<strong>输出</strong>，输出名字为<strong>谁</strong>的文件。</li><li>浏览器环境下，还不识别import语法，所以将打包出来的lib，以<strong>iife</strong>形式输出一个挂载在window上的全局对象。</li><li>Node环境下，只支持CommonJs规范，所以以<strong>cjs</strong>类型输出。</li></ol></div></li><li><h5 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h5><ul><li>使用命令行</li><li>使用配置文件</li><li>使用Javascript API 调用</li></ul><div class="alert info no-icon"><p>你必须使用配置文件才能执行以下操作：</p><ol><li><p>把一个项目打包，然后输出多个文件</p></li><li><p>使用Rollup插件</p></li></ol></div></li><li><h5 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h5><ul><li>rollup-plugin-json： 从json文件中读取数据</li><li>rollup-plugin-node-resolve：解析外部模块</li><li>rollup-plugin-commonjs：解析只遵循CommonJs规范的模块</li><li>rollup-plugin-typescript：打包ts</li></ul></li><li><h5 id="核心功能"><a href="#核心功能" class="headerlink" title="核心功能"></a>核心功能</h5><p>input、output、plugin、external详见官网</p></li></ul><h4 id="ES模块使用"><a href="#ES模块使用" class="headerlink" title="ES模块使用"></a>ES模块使用</h4><div class="alert warning no-icon"><p>导入导出是两码事儿，没有任何对应的关系</p><p>导入的模块不能被重新分配（不能被修改 ） 否则打包编译不过去</p></div><ul><li><h5 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h5><ol><li><p>命名导入:  </p><p><code>import { something } from &#39;./module.js&#39;;</code></p><p><code>import { something as somethingElse } from &#39;./module.js&#39;;</code></p></li><li><p>命名空间导入:</p><p>  <code>import * as module from &#39;./module.js&#39;</code></p></li><li><p>默认导入：</p><p>  <code>import something from &#39;./module.js&#39;;</code> </p></li><li><p>空导入：</p><p>  <code>import &#39;./module.js&#39;;</code></p><p>应用于<strong>腻子脚本</strong>`，这些脚本或工具只需要自执行，并且通常都是在我们的业务代码之前引入</p></li></ol></li><li><h5 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h5><ol><li><p>命名导出</p><p><code>export { something };</code></p><p><code>export { something as somethingElse };</code></p><p><code>export const something = true;</code></p></li><li><p>默认导出，<strong>仅当源模块只有一个导出时，才建议使用这种方法</strong></p><p><code>export default something;</code></p></li></ol></li></ul><h4 id="集成其他工具"><a href="#集成其他工具" class="headerlink" title="集成其他工具"></a>集成其他工具</h4><ul><li><p>npm</p></li><li><p>Babel</p><p>技术更新太快，详见英文官网</p></li><li><p>Gulp</p><p>Rollup 返回 Gulp 能明白的 promise，所以集成是很容易的。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</span><br><span class="line"><span class="keyword">const</span> rollup = <span class="built_in">require</span>(<span class="string">'rollup'</span>);</span><br><span class="line"><span class="keyword">const</span> rollupTypescript = <span class="built_in">require</span>(<span class="string">'rollup-plugin-typescript'</span>);</span><br><span class="line">gulp.task(<span class="string">'build'</span>, <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> bundle = <span class="keyword">await</span> rollup.rollup(&#123;</span><br><span class="line">    input: <span class="string">'./src/main.ts'</span>,</span><br><span class="line">    plugins: [</span><br><span class="line">      rollupTypescript()</span><br><span class="line">    ]</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">await</span> bundle.write(&#123;</span><br><span class="line">    file: <span class="string">'./dist/library.js'</span>,</span><br><span class="line">    format: <span class="string">'umd'</span>,</span><br><span class="line">    name: <span class="string">'library'</span>,</span><br><span class="line">    sourcemap: <span class="literal">true</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>Peer dependencies</p><p>对等依赖关系：以Lodash为例</p><p>有一种情况是，虽然我们引用了Loadsh的方法，但是不希望打包ladash代码，期待的是告知用户，我这个lib，需要依赖loadsh，你自己去下载（原因是用户的项目中可能也依赖loadsh，为避免最后打包上线的代码存在两份lodash）。</p><p>指出应将哪些模块视为外部模块：  <code>external: [&#39;lodash&#39;]</code></p></li></ul><h4 id="Javascript-API"><a href="#Javascript-API" class="headerlink" title="Javascript API"></a>Javascript API</h4><ul><li>Rollup.rollup：如供gulp使用</li><li>Rollup.watch：监听文件变化，实时打包（不常用）</li></ul><h4 id="基本款模板"><a href="#基本款模板" class="headerlink" title="基本款模板"></a>基本款模板</h4><div class="alert warning no-icon"><p>format代表着打包完成后以哪种类型的模块规范<strong>输出</strong>，如果是umd或iife，需要指定name属性，即生成全局变量的名称</p></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json <span class="keyword">from</span> <span class="string">'rollup-plugin-json'</span></span><br><span class="line"><span class="keyword">import</span> resolve <span class="keyword">from</span> <span class="string">'rollup-plugin-node-resolve'</span>;</span><br><span class="line"><span class="keyword">import</span> commonjs <span class="keyword">from</span> <span class="string">'rollup-plugin-commonjs'</span>;</span><br><span class="line"><span class="keyword">import</span> babel <span class="keyword">from</span> <span class="string">'rollup-plugin-babel'</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  input: <span class="string">'src/main.js'</span>,</span><br><span class="line">  output: &#123;</span><br><span class="line">    file: <span class="string">'lib/bundle.js'</span>,</span><br><span class="line">    format: <span class="string">'umd'</span>,</span><br><span class="line">    name: <span class="string">'zbw'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    commonjs(),</span><br><span class="line">    json(),</span><br><span class="line">    resolve(&#123;</span><br><span class="line">      jsnext: <span class="literal">true</span>,</span><br><span class="line">      main: <span class="literal">true</span></span><br><span class="line">    &#125;),</span><br><span class="line">    babel(&#123;</span><br><span class="line">      exclude: <span class="string">'node_modules/**'</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">  ],</span><br><span class="line">  external: [<span class="string">'lodash'</span>]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><blockquote><p>由于中英文官网两者版本差距过大，墙裂推荐去英文官网：<a href="https://rollupjs.org/guide/en" target="_blank" rel="noopener">Rollup官网</a></p><p><a href="https://github.com/topseczbw/rollup-demo" target="_blank" rel="noopener">demo</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;解读官网，通俗易懂地学习Rollup&lt;br&gt;
    
    </summary>
    
      <category term="技术分享" scheme="https://topseczbw.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="rollup" scheme="https://topseczbw.github.io/tags/rollup/"/>
    
      <category term="node" scheme="https://topseczbw.github.io/tags/node/"/>
    
      <category term="自动化构建" scheme="https://topseczbw.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%9E%84%E5%BB%BA/"/>
    
      <category term="模块化" scheme="https://topseczbw.github.io/tags/%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
    
      <category term="前端工程化" scheme="https://topseczbw.github.io/tags/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客：主题篇</title>
    <link href="https://topseczbw.github.io/2019/04/05/hexo%E5%8D%9A%E5%AE%A2%EF%BC%9A%E4%B8%BB%E9%A2%98%E7%AF%87/"/>
    <id>https://topseczbw.github.io/2019/04/05/hexo博客：主题篇/</id>
    <published>2019-04-05T04:13:03.784Z</published>
    <updated>2019-04-05T04:13:03.784Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak" target="_blank" rel="noopener">Tranquilpeak</a>（宁静）是hexo的一款相比于next更美观，更加图文并茂的主题。</p><a id="more"></a><!-- toc --><h4 id="主题-config-yml文件设置"><a href="#主题-config-yml文件设置" class="headerlink" title="主题_config.yml文件设置"></a>主题_config.yml文件设置</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 图片资源位置</span></span><br><span class="line"><span class="attr">image_dir:</span> <span class="string">assets/images</span></span><br><span class="line"><span class="comment"># 侧导航设置</span></span><br><span class="line"><span class="attr">sidebar:</span></span><br><span class="line"><span class="attr">  menu:</span></span><br><span class="line"><span class="attr">    home:</span></span><br><span class="line"><span class="attr">      title:</span> <span class="string">global.home</span></span><br><span class="line"><span class="attr">      url:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">      icon:</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line"><span class="attr">    categories:</span></span><br><span class="line"><span class="attr">      title:</span> <span class="string">global.categories</span></span><br><span class="line"><span class="attr">      url:</span> <span class="string">/all-categories</span></span><br><span class="line"><span class="attr">      icon:</span> <span class="string">fa</span> <span class="string">fa-bookmark</span></span><br><span class="line"><span class="attr">    tags:</span></span><br><span class="line"><span class="attr">      title:</span> <span class="string">global.tags</span></span><br><span class="line"><span class="attr">      url:</span> <span class="string">/all-tags</span></span><br><span class="line"><span class="attr">      icon:</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line"><span class="attr">    archives:</span></span><br><span class="line"><span class="attr">      title:</span> <span class="string">global.archives</span></span><br><span class="line"><span class="attr">      url:</span> <span class="string">/all-archives</span></span><br><span class="line"><span class="attr">      icon:</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line"><span class="attr">    about:</span></span><br><span class="line"><span class="attr">      title:</span> <span class="string">global.about</span></span><br><span class="line"><span class="attr">      url:</span> <span class="string">/#about</span></span><br><span class="line"><span class="attr">      icon:</span> <span class="string">fa</span> <span class="string">fa-question</span></span><br><span class="line"><span class="attr">    github:</span></span><br><span class="line"><span class="attr">      title:</span> <span class="string">global.github</span></span><br><span class="line"><span class="attr">      url:</span> <span class="attr">https://github.com/topseczbw</span></span><br><span class="line"><span class="attr">      icon:</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line"><span class="attr">    mail:</span></span><br><span class="line"><span class="attr">      title:</span> <span class="string">global.mail</span></span><br><span class="line"><span class="attr">      url:</span> <span class="string">mailto</span></span><br><span class="line"><span class="attr">      icon:</span> <span class="string">fa</span> <span class="string">fa-envelope</span></span><br><span class="line"> <span class="comment"># 作者相关</span></span><br><span class="line"><span class="attr"> author:</span></span><br><span class="line"><span class="attr">      email:</span> <span class="number">569119225</span><span class="string">@qq.com</span></span><br><span class="line"><span class="attr">      location:</span> <span class="string">北京-海淀</span></span><br><span class="line"> <span class="comment"># 个性化定制</span></span><br><span class="line"> <span class="comment"># 侧边栏状态123456</span></span><br><span class="line"><span class="attr"> sidebar_behavior:</span> <span class="number">2</span></span><br><span class="line"> <span class="comment"># 阅读时侧边栏状态是否收起</span></span><br><span class="line"><span class="attr"> clear_reading:</span> <span class="literal">true</span></span><br><span class="line"> <span class="comment"># 缩略图设置</span></span><br><span class="line"><span class="attr"> thumbnail_image:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr"> thumbnail_image_position:</span> <span class="string">left</span></span><br><span class="line"><span class="attr"> auto_thumbnail_image:</span> <span class="literal">true</span></span><br><span class="line"> <span class="comment"># 缩略图设置</span></span><br><span class="line"><span class="attr"> cover_image:</span> <span class="attr">http://pov6tpkt4.bkt.clouddn.com/bg4.jpg</span></span><br><span class="line"><span class="attr"> favicon:</span> <span class="string">avatar.png</span></span><br><span class="line"><span class="attr"> image_gallery:</span> <span class="literal">true</span></span><br><span class="line"> <span class="comment"># 分类、标签、归档是否分页</span></span><br><span class="line"><span class="attr"> archive_pagination:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr"> category_pagination:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr"> tag_pagination:</span> <span class="literal">true</span></span><br><span class="line"> <span class="comment"># 评论系统</span></span><br><span class="line"><span class="attr"> disqus_shortname:</span> <span class="string">zbwblog</span></span><br></pre></td></tr></table></figure><h4 id="主题languages-zh-cn设置"><a href="#主题languages-zh-cn设置" class="headerlink" title="主题languages/zh-cn设置"></a>主题languages/zh-cn设置</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">author:</span></span><br><span class="line">  <span class="comment"># 你的个人简介 (支持 Markdown 和 HTML 语法)</span></span><br><span class="line"><span class="attr">  bio:</span> <span class="string">"&gt; 乐观看待未来&lt;br&gt; 不抱怨只自省&lt;br&gt; 超越常人的坚持"</span></span><br><span class="line">  <span class="comment"># 你的工作简介</span></span><br><span class="line"><span class="attr">  job:</span> <span class="string">"TALFE"</span></span><br></pre></td></tr></table></figure><h4 id="文章中Front-matter常用设置"><a href="#文章中Front-matter常用设置" class="headerlink" title="文章中Front-matter常用设置"></a>文章中Front-matter常用设置</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 隐藏所有文章页面上的侧边栏，让文章全宽以提高阅读，并享受宽图像和封面图像</span></span><br><span class="line"><span class="attr">clearReading:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 文章缩略图地址 主题/source/assets/images/ 或者 在线地址</span></span><br><span class="line"><span class="attr">thumbnailImage:</span> <span class="string">image-1.png</span></span><br><span class="line"><span class="comment"># 缩略图定位：right left bottom</span></span><br><span class="line"><span class="attr">thumbnailImagePosition:</span> <span class="string">bottom</span></span><br><span class="line"><span class="comment"># 如果没有缩略图，自动选择封面图像或文章图库中的第一张照片作为缩略图</span></span><br><span class="line"><span class="attr">autoThumbnailImage:</span> <span class="literal">yes</span></span><br><span class="line"><span class="comment"># 标题、日期、类别对齐方式</span></span><br><span class="line"><span class="attr">metaAlignment:</span> <span class="string">center</span></span><br><span class="line"><span class="comment"># 在帖子视图（封面）中，以全尺寸显示在帖子顶部的图像</span></span><br><span class="line"><span class="attr">coverImage:</span> <span class="string">image-2.png</span></span><br><span class="line"><span class="comment"># 给封面加标题</span></span><br><span class="line"><span class="attr">coverCaption:</span> <span class="string">"A beautiful sunrise"</span></span><br><span class="line"><span class="comment"># 给封面加帖子元(标题、日期、类别)</span></span><br><span class="line"><span class="attr">coverMeta:</span> <span class="string">out</span></span><br><span class="line"><span class="comment"># 封面占比：partial full</span></span><br><span class="line"><span class="attr">coverSize:</span> <span class="string">full</span></span><br><span class="line"><span class="comment"># 禁用评论</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># 禁用帖子元</span></span><br><span class="line"><span class="attr">meta:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># 禁用发布操作</span></span><br><span class="line"><span class="attr">actions:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h4 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h4><ul><li><p>标签插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% alert danger no-icon %&#125;</span><br><span class="line">警告内容</span><br><span class="line">&#123;% endalert %&#125;</span><br><span class="line">&#123;% hl_text danger %&#125;</span><br><span class="line">高亮文本</span><br><span class="line">&#123;% endhl_text %&#125;</span><br><span class="line">class： danger success warning info</span><br></pre></td></tr></table></figure> <div class="alert success no-icon"><p>class： danger success warning info </p></div></li></ul><h4 id="踩过的坑"><a href="#踩过的坑" class="headerlink" title="踩过的坑"></a>踩过的坑</h4><ul><li><span class="highlight-text danger">开发环境样式丢失</span>  <p><br></p><p>博客搭建完成后，尝试通过github管理本blog项目（是hexo搭建的本项目，而非username.github.io托管的静态html项目），几天之后，在另外一台电脑git clone本项目，本以为根据根目录和主题目录的package.json安装依赖完成后可以直接运行并编辑博客，运行起来后发现，样式丢失了。</p><p><br></p><p>找了很多资料，有人说是url和root路径的问题，尝试修改了很多次，仍然不行。</p><p><br></p><p>最后定位到问题，是因为第一次搭建Tranquilpeak主题时，作者推荐直接下载生产版压缩包（里面包含压缩好的css和node_modules），而不是从仓库master分支拉开发版本项目。是因为即使是在开发环境中，主题项目引用的仍然是压缩过后的css。所以由于开发环境主题项目没有压缩css，而经过hexo编译的markdown文件引入的又是生产环境压缩过后的css，导致样式丢失。</p><p><br></p><p>解决方法：进入主题目录，执行  <code>npm run build</code>  命令，再启动hexo就正常了。</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Tranquilpeak&lt;/a&gt;（宁静）是hexo的一款相比于next更美观，更加图文并茂的主题。&lt;/p&gt;
    
    </summary>
    
      <category term="基础教程" scheme="https://topseczbw.github.io/categories/%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="hexo" scheme="https://topseczbw.github.io/tags/hexo/"/>
    
      <category term="tranquilpeak" scheme="https://topseczbw.github.io/tags/tranquilpeak/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客：基本款</title>
    <link href="https://topseczbw.github.io/2019/03/31/hexo%E5%8D%9A%E5%AE%A2%EF%BC%9A%E5%9F%BA%E6%9C%AC%E6%AC%BE/"/>
    <id>https://topseczbw.github.io/2019/03/31/hexo博客：基本款/</id>
    <published>2019-03-30T20:50:39.808Z</published>
    <updated>2019-03-31T06:46:22.134Z</updated>
    
    <content type="html"><![CDATA[<p>hexo通过将markdown文件生成静态html，并借助github为服务器，快速搭建属于自己的博客。<br><a id="more"></a><br><!-- toc --></p><h4 id="开始搭建"><a href="#开始搭建" class="headerlink" title="开始搭建"></a>开始搭建</h4><ol><li><h5 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h5><p> 在node、git前提下，全局安装hexo。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm i hexo -g</span><br></pre></td></tr></table></figure></li><li><h5 id="初始化仓库"><a href="#初始化仓库" class="headerlink" title="初始化仓库"></a>初始化仓库</h5><p>执行下述命令，然后通过  localhost:4000  查看。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir blog &amp;&amp; cd blog</span><br><span class="line">hexo init#初始化hexo仓库，默认安装依赖，如果没有，需要手动 npm install</span><br><span class="line">hexo g#生成缓存和静态文件，可以理解为编译markdown为html</span><br><span class="line">hexo s#开发环境调试博客</span><br></pre></td></tr></table></figure></li><li><h5 id="关联个人github"><a href="#关联个人github" class="headerlink" title="关联个人github"></a>关联个人github</h5><p>注册并登陆GitHub账号后，新建public仓库，名称必须是  <span class="highlight-text danger">topseczbw.github.io（前缀是用户名）</span>  。</p><p>修改本地仓库_config.yml文件，打开后到文档最后部分，将deploy配置如下：</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repository:</span> <span class="attr">https://github.com/topseczbw/topseczbw.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure></li><li><h5 id="安装hexo-deployer-git"><a href="#安装hexo-deployer-git" class="headerlink" title="安装hexo-deployer-git"></a>安装hexo-deployer-git</h5><p>git与hexo仓库关联所依赖的推送工具，重新编译并上传github。</p><p>若未关联GitHub，执行<code>hexo d</code>时会提示输入GitHub账号用户名和密码。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-deployer-git -S #安装推送工具</span><br><span class="line">hexo g &amp;&amp; hexo d #重新部署到服务器</span><br></pre></td></tr></table></figure></li></ol><h4 id="添加ssh-keys到github"><a href="#添加ssh-keys到github" class="headerlink" title="添加ssh keys到github"></a>添加ssh keys到github</h4><ol><li><h5 id="为什么设置？"><a href="#为什么设置？" class="headerlink" title="为什么设置？"></a>为什么设置？</h5><p>添加ssh key后不需要每次更新博客再输入用户名和密码。</p></li><li><h5 id="如何设置？"><a href="#如何设置？" class="headerlink" title="如何设置？"></a>如何设置？</h5><p>首先检查本地是否包含ssh keys。如果存在则直接将ssh key添加到GitHub之中，否则新生成ssh key。</p><p>执行下述命令生成新的ssh key，将  <code>your_email@exampl</code>  改成自己注册的GitHub邮箱地址。默认会在  <code>~/.ssh/id_rsa.pub</code>  中生成  <code>id_rsa</code>  和  <code>id_rsa.pub</code>  文件</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C "your_email@exampl"</span><br></pre></td></tr></table></figure><p>Mac下利用  <code>open ~/.ssh</code>  打开文件夹，打开id_rsa.pub文件，里面的信息即为ssh key，将此信息复制到GitHub的Add ssh key  <code>路径GitHub-&gt;Setting-&gt;SSH keys-&gt;add SSH key</code>  中即可。Title里填写任意标题，将复制的内容粘贴到key中，点击Add key完成添加</p><p>此时本地博客内容便已关联到GitHub之中，本地博客改变之后，通过  <code>hexo g</code>  和  <code>hexo d</code>  便可更新到GitHub之中，通过 <a href="https://topseczbw.github.io/">https://topseczbw.github.io/</a> 访问便可看到更新内容</p></li></ol><h4 id="参考内容"><a href="#参考内容" class="headerlink" title="参考内容"></a>参考内容</h4><ul><li><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">hexo官网</a></li><li><a href="https://www.jianshu.com/p/cbf8ba8af532" target="_blank" rel="noopener">Mac+Hexo+GitHub博客搭建教程</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;hexo通过将markdown文件生成静态html，并借助github为服务器，快速搭建属于自己的博客。&lt;br&gt;
    
    </summary>
    
      <category term="基础教程" scheme="https://topseczbw.github.io/categories/%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="hexo" scheme="https://topseczbw.github.io/tags/hexo/"/>
    
      <category term="github" scheme="https://topseczbw.github.io/tags/github/"/>
    
  </entry>
  
</feed>
